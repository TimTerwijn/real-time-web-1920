<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>250</y>
      <w>210</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Starwars Api
--
Starships{
  MGLT
  cargo_capacity
  consumables
  cost_in_credits
  created
  crew
  edited
  hyperdrive_rating
  length
  manufacturer
  max_atmosphering_speed
  model
  name
  passengers
  films
  pilots
  starship_class
  url
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>40</x>
      <y>50</y>
      <w>340</w>
      <h>820</h>
    </coordinates>
    <panel_attributes>Client Side
--



























userID : "4f8330e6-5093-4755-884d-886fc6a24ecc"





Sprite selection menu onclick()

HTML img src = "x-wing.png"

On left arrow()




HTML img css left = x
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>50</y>
      <w>380</w>
      <h>820</h>
    </coordinates>
    <panel_attributes>Server Side
--

Get users from database, store them in ram

users[
  user{
    id,
    username,
    x,
    velocity,
    maxSpeed,
    sprite,
  }
]

Get starships, use name and image and store them in ram:

starships[
  starship{
    "name" : "x-wing",
    "img" : "/client/public/img/players/x-wing",
  }
]

Page request, return html + picture of the day


Receive username, create room and return a unique ID

room{
  name,
  user1,
  user2,
}

Save sprite in room, then broadcast to players,




Set velocity of room1.player1 to its max speed (8)
Gameloop will update player 1 x location
Broadcast new x location of player 1 to all players in room1

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>470</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Create account / login (SocketIO)</panel_attributes>
    <additional_attributes>290.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>490</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
user ID (SocketIO)</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>270</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
GET starships (Fetch)</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>430</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
GET index.ejs (EJS)</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>670</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
player1 on left (SocketIO)</panel_attributes>
    <additional_attributes>290.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>730</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Broadcast new X coordinate of Harry</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>50</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Database
--
users[
  user{
    id,
    username,
    x,
    velocity,
    maxSpeed,
    sprite,
  }
]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>70</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
users (query)</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>80</y>
      <w>450</w>
      <h>620</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Update database (query)</panel_attributes>
    <additional_attributes>380.0;10.0;430.0;10.0;430.0;600.0;100.0;600.0;100.0;420.0;10.0;420.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>600</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Set player sprite (SocketIO)</panel_attributes>
    <additional_attributes>290.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>620</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Set player sprite (SocketIO)</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
</diagram>
